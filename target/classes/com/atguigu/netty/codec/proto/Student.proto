syntax = "proto3";//版本
option optimize_for = SPEED;
option java_outer_classname = "MyDataInfo";// 生成的外部类名，同时也是文件名
// protobuf 使用message管理数据
message MyMessage {
    enum DataType {
        StudentType = 0;
        WorkerType = 1;
    }
    // 用DataType来标识数据类型，这样就可以使用一个message来管理多种类型的数据
    DataType data_type = 1;

    // 使用oneof关键字，表示只能有一个字段被赋值
    oneof dataBody {
        Student student = 2;
        Worker worker = 3;
    }
}
message Student{ // 会在StudentPOJO外部类中生成一个内部类Student 她是真正发送的数据
    // 数据类型 变量名 = 序号
    int32 id = 1; // 会在Student内部类中生成一个int类型的id变量 他的序号是1 他的值是从0开始的
    string name = 2;
    int32 age = 3;
    string address = 4;
}
message Worker{
    int32 id = 1;
    string name = 2;
    int32 age = 3;
    string address = 4;
}
